"0","nonlinear_data_generation = function(n, d, d1, abn_mean, abn_prob, "
"0","                                     dispersion, seed) {"
"0","  set.seed(seed)"
"0","  d2 = d - d1"
"0","  "
"0","  # ==========================Correlated pairs=================================="
"0","  # Log-Normal distribution to mimic NB distribution"
"0","  template_var = sapply(abn_mean, function(x) "
"0","    log((x + dispersion * x^2)/x^2 + 1))"
"0","  template_mean = log(abn_mean) - template_var/2"
"0","  "
"0","  mu = sample(template_mean, d1, replace = TRUE, prob = abn_prob)"
"0","  std = rep(NA, d1)"
"0","  for (i in seq_along(template_mean)) {"
"0","    std[mu == template_mean[i]] = sqrt(template_var[i])"
"0","  }"
"0","  Sigma = cor2cov(R = diag(1, nrow = d1), std = std)"
"0","  "
"0","  # Absolute abundance in log scale"
"0","  a = t(MASS::mvrnorm(n = n, mu = mu, Sigma = Sigma))"
"0","  for (i in seq(2, d1, 2)) {"
"0","    a[i, ] = poly(x = a[i - 1, ], degree = 2, raw = FALSE)[, 2]"
"0","    a[i, ] = mu[i] * a[i, ] + mu[i]"
"0","  }"
"0","  A1 = round(exp(a))"
"0","  "
"0","  # ========================Uncorrelated pairs=================================="
"0","  mu = sample(abn_mean, d2, replace = TRUE, prob = abn_prob)"
"0","  # Absolute abundances"
"0","  A2 = matrix(NA, ncol = n, nrow = d2)"
"0","  for (i in seq_len(d2)) {"
"0","    A2[i, ] = rnbinom(n = n, size = 1/dispersion, mu = mu[i])"
"0","  }"
"0","  "
"0","  A = rbind(A1, A2)"
"0","  "
"0","  # Sequencing efficiency"
"0","  C = C = rbeta(n = d, shape1 = 5, shape2 = 5)"
"0","  "
"0","  # Microbial loads in the ecosystem"
"0","  A_prim = A * C"
"0","  A_dot = colSums(A_prim)"
"0","  "
"0","  # Relative abundances in the ecosystem"
"0","  R = A_prim/t(replicate(d, A_dot))"
"0","  "
"0","  # Sampling fractions"
"0","  S = rbeta(n = n, shape1 = 2, shape2 = 10)"
"0","  "
"0","  # Library sizes"
"0","  O_dot = round(S * A_dot)"
"0","  # Observed abundances"
"0","  O = matrix(NA, nrow = d, ncol = n)"
"0","  for (i in seq(n)) {"
"0","    O[, i] = rmultinom(1, size = O_dot[i], prob = R[, i])"
"0","  }"
"0","  "
"0","  R0 = matrix(0, ncol = d, nrow = d)"
"0","  lmat = replicate(d1/2, "
"0","                   matrix(1, ncol = 2, nrow = 2), "
"0","                   simplify = FALSE)"
"0","  R0_sub = as.matrix(Matrix::bdiag(lmat))"
"0","  R0[seq_len(d1), seq_len(d1)] = R0_sub"
"0","  "
"0","  res = list(O = O, R0 = R0)"
"0","  return(res)"
"0","}"
"0",""
"0","n_d = c(""50_100"", ""100_200"")"
"0","d1 = 50"
"0","abn_mean = c(2000, 10000, 40000, 100000)"
"0","abn_prob = c(0.1, 0.4, 0.4, 0.1)"
"0","dispersion = c(0.5, 2)"
"0","iter_num = 100"
"0","seed = seq_len(iter_num)"
"0",""
"0","simparams = data.frame(expand.grid(n_d, dispersion, seed)) %>%"
"0","  separate(col = Var1, into = c(""n"", ""d""), sep = ""_"") %>%"
"0","  mutate(n = as.numeric(n),"
"0","         d = as.numeric(d))"
"0","colnames(simparams) = c(""n"", ""d"", ""dispersion"", ""seed"")"
"0","simparams = simparams %>%"
"0","  arrange(n, d, dispersion, seed)"
"0","simparams_list = apply(simparams, 1, paste0, collapse = ""_"")"
