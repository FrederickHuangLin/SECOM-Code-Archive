"0","linear_secom = read_csv(""../outputs/linear/linear_secom.csv"")
"
"1","[1m[1mRows: [1m[22m[34m[34m400[34m[39m [1m[1mColumns: [1m[22m[34m[34m16[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m---------------------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[32mdbl[39m (16): X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","linear_secom1 = linear_secom[, 1:4]"
"0","linear_secom2 = linear_secom[, 5:8]"
"0","linear_secom3 = linear_secom[, 9:12]"
"0","secom_compare = linear_secom[, 13:16]"
"0","linear_prop = read_csv(""../outputs/linear/linear_prop.csv"")"
"1","[1m[1mRows: [1m[22m[34m[34m400[34m[39m [1m[1mColumns: [1m[22m[34m[34m4[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m---------------------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[32mdbl[39m (4): X1, X2, X3, X4
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","linear_sparcc = read_csv(""../outputs/linear/linear_sparcc.csv"")"
"1","[1m[1mRows: [1m[22m[34m[34m400[34m[39m [1m[1mColumns: [1m[22m[34m[34m4[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m---------------------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[32mdbl[39m (4): X1, X2, X3, X4
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","linear_se = read_csv(""../outputs/linear/linear_se.csv"")"
"1","[1m[1mRows: [1m[22m[34m[34m400[34m[39m [1m[1mColumns: [1m[22m[34m[34m8[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m---------------------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[32mdbl[39m (8): X1, X2, X3, X4, X5, X6, X7, X8
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","linear_se1 = linear_secom[, 1:4]"
"0","linear_se2 = linear_secom[, 5:8]"
"0","linear_sample = read_csv(""../outputs/linear/linear_sample.csv"")"
"1","[1m[1mRows: [1m[22m[34m[34m400[34m[39m [1m[1mColumns: [1m[22m[34m[34m4[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m---------------------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[32mdbl[39m (4): X1, X2, X3, X4
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","col_lab = c(""rel_F"", ""rel_S"", ""tpr"", ""fpr"")"
"0","colnames(linear_secom1) = col_lab"
"0","colnames(linear_secom2) = col_lab"
"0","colnames(linear_secom3) = col_lab"
"0","colnames(linear_prop) = col_lab"
"0","colnames(linear_sparcc) = col_lab"
"0","colnames(linear_se1) = col_lab"
"0","colnames(linear_se2) = col_lab"
"0","colnames(linear_sample) = col_lab"
"0",""
"0","simpattern = distinct(simparams, n, d, dispersion) %>%"
"0","  unite(""setting"", n:dispersion, sep = "", "")"
"0",""
"0","linear_secom1 = linear_secom1 %>%"
"0","  mutate(method = ""SECOM (Pearson1)"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_secom2 = linear_secom2 %>%"
"0","  mutate(method = ""SECOM (Pearson2)"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_secom3 = linear_secom3 %>%"
"0","  mutate(method = ""SECOM (Distance)"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_prop = linear_prop %>%"
"0","  mutate(method = ""Proportionality"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_sparcc = linear_sparcc %>%"
"0","  mutate(method = ""SparCC"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_se1 = linear_se1 %>%"
"0","  mutate(method = ""SPIEC-EASI (MB)"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_se2 = linear_se2 %>%"
"0","  mutate(method = ""SPIEC-EASI (GL)"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0","linear_sample = linear_sample %>%"
"0","  mutate(method = ""Pearson"", "
"0","         setting = rep(simpattern$setting, each = iter_num))"
"0",""
"0","df_linear = rbind(linear_secom1, linear_secom2, linear_secom3, linear_prop, "
"0","                  linear_sparcc, linear_se1, linear_se2, linear_sample)"
"0",""
"0","# Relative norm loss"
"0","df_linear_fig1 = df_linear %>%"
"0","  dplyr::select(rel_F, rel_S, method, setting) %>%"
"0","  pivot_longer(cols = rel_F:rel_S, names_to = ""measure"", values_to = ""value"") %>%"
"0","  group_by(method, setting, measure) %>%"
"0","  summarise(measure_mean = mean(value),"
"0","            measure_sd = sd(value))"
"1","`summarise()` has grouped output by 'method', 'setting'. You can override using the `.groups` argument.
"
"0","df_linear_fig1$method = factor(df_linear_fig1$method, "
"0","                               levels = c(""SECOM (Pearson1)"", ""SECOM (Pearson2)"","
"0","                                          ""SECOM (Distance)"", ""Proportionality"", ""SparCC"", "
"0","                                          ""SPIEC-EASI (MB)"", ""SPIEC-EASI (GL)"", ""Pearson""))"
"0","df_linear_fig1$setting = factor(df_linear_fig1$setting, "
"0","                                levels = c(""50, 100, 0.5"", ""50, 100, 2"","
"0","                                           ""100, 200, 0.5"", ""100, 200, 2""))"
"0",""
"0","p_linear1 = df_linear_fig1 %>%"
"0","  ggplot(aes(x = setting, y = measure_mean, fill = method)) + "
"0","  geom_bar(position = ""dodge"", stat = ""identity"", color = ""black"") +"
"0","  geom_errorbar(aes(ymin = measure_mean - measure_sd, ymax = measure_mean + measure_sd), "
"0","                width = .2, position = position_dodge(.9)) +"
"0","  scale_fill_nejm(name = NULL) +"
"0","  scale_x_discrete(labels = c(""50, 100, 0.5"" = ""(n = 50, d = 100, \u03B1 = 0.5)"","
"0","                              ""50, 100, 2"" = ""(n = 50, d = 100, \u03B1 = 2)"","
"0","                              ""100, 200, 0.5"" = ""(n = 100, d = 200, \u03B1 = 0.5)"","
"0","                              ""100, 200, 2"" = ""(n = 100, d = 200, \u03B1 = 2)"")) +"
"0","  facet_grid(rows = vars(measure), scales = ""free"", switch = ""y"", "
"0","             labeller = labeller(measure = c(rel_F = ""Frobenius"", rel_S = ""Spectral""))) +"
"0","  labs(title = ""Relative Norm Loss"", x = NULL, y = NULL) +"
"0","  theme_bw() +"
"0","  theme(plot.title = element_text(hjust = 0.5),"
"0","        strip.background = element_rect(fill = ""white""))"
"0",""
"0","# TPR/FPR"
"0","df_linear_fig2 = df_linear %>%"
"0","  dplyr::select(tpr, fpr, method, setting) %>%"
"0","  pivot_longer(cols = tpr:fpr, names_to = ""measure"", values_to = ""value"") %>%"
"0","  group_by(method, setting, measure) %>%"
"0","  summarise(measure_mean = mean(value),"
"0","            measure_sd = sd(value))"
"1","`summarise()` has grouped output by 'method', 'setting'. You can override using the `.groups` argument.
"
"0","df_linear_fig2$method = factor(df_linear_fig2$method, "
"0","                               levels = c(""SECOM (Pearson1)"", ""SECOM (Pearson2)"","
"0","                                          ""SECOM (Distance)"", ""Proportionality"", ""SparCC"","
"0","                                          ""SPIEC-EASI (MB)"", ""SPIEC-EASI (GL)"", ""Pearson""))"
"0","df_linear_fig2$setting = factor(df_linear_fig2$setting, "
"0","                                levels = c(""50, 100, 0.5"", ""50, 100, 2"","
"0","                                           ""100, 200, 0.5"", ""100, 200, 2""))"
"0",""
"0","p_linear2 = df_linear_fig2 %>%"
"0","  ggplot(aes(x = setting, y = measure_mean, fill = method)) + "
"0","  geom_bar(position = ""dodge"", stat = ""identity"", color = ""black"") +"
"0","  geom_errorbar(aes(ymin = measure_mean - measure_sd, ymax = measure_mean + measure_sd), "
"0","                width = .2, position = position_dodge(.9)) +"
"0","  scale_fill_nejm(name = NULL) +"
"0","  scale_x_discrete(labels = c(""50, 100, 0.5"" = ""(n = 50, d = 100, \u03B1 = 0.5)"","
"0","                              ""50, 100, 2"" = ""(n = 50, d = 100, \u03B1 = 2)"","
"0","                              ""100, 200, 0.5"" = ""(n = 100, d = 200, \u03B1 = 0.5)"","
"0","                              ""100, 200, 2"" = ""(n = 100, d = 200, \u03B1 = 2)"")) +"
"0","  facet_grid(rows = vars(measure), scales = ""free"", switch = ""y"", "
"0","             labeller = labeller(measure = c(tpr = ""TPR"", fpr = ""FPR""))) +"
"0","  labs(title = ""Sparsity Recovery"", x = NULL, y = NULL) +"
"0","  theme_bw() +"
"0","  theme(plot.title = element_text(hjust = 0.5),"
"0","        strip.background = element_rect(fill = ""white""))"
"0",""
"0",""
"0","p_linear = ggarrange(p_linear1, p_linear2, ncol = 2, nrow = 1,"
"0","                     labels = c(""a"", ""b""), common.legend = TRUE, legend = ""bottom"")"
"0","print(p_linear)"
